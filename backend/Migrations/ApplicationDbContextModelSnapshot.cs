// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projet_Sqli.Data;

#nullable disable

namespace Projet_Sqli.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projet_Sqli.Entities.Historique", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.Property<int>("VideoId")
                    .HasColumnType("int");

                b.Property<DateTime>("ViewedAt")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Historiques");
            });

            modelBuilder.Entity("Projet_Sqli.Entities.Role", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Roles");

                b.HasData(
                    new
                    {
                        Id = 1,
                        CreatedAt = new DateTime(2024, 8, 7, 13, 22, 7, 2, DateTimeKind.Local).AddTicks(7388),
                        Name = "user",
                        UpdatedAt = new DateTime(2024, 8, 7, 13, 22, 7, 2, DateTimeKind.Local).AddTicks(7460)
                    },
                    new
                    {
                        Id = 2,
                        CreatedAt = new DateTime(2024, 8, 7, 13, 22, 7, 2, DateTimeKind.Local).AddTicks(7466),
                        Name = "admin",
                        UpdatedAt = new DateTime(2024, 8, 7, 13, 22, 7, 2, DateTimeKind.Local).AddTicks(7470)
                    });
            });

            modelBuilder.Entity("Projet_Sqli.Entities.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Country")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("CreatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime2")
                    .HasDefaultValueSql("GETDATE()");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("RoleId")
                    .HasColumnType("int");

                b.Property<DateTime>("UpdatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime2")
                    .HasDefaultValueSql("GETDATE()");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("RoleId");

                b.ToTable("Users");

                b.HasOne("Projet_Sqli.Entities.Role", "Role")
                    .WithMany()
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Role");
            });

            modelBuilder.Entity("Projet_Sqli.Entities.Videos", b =>
            {
                b.Property<string>("VideoId")
                    .HasColumnType("nvarchar(450)");

                b.Property<string>("ChannelId")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ChannelTitle")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Comments")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("CreatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime2")
                    .HasDefaultValueSql("GETDATE()");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Duration")
                    .HasColumnType("int");

                b.Property<string>("Likes")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("PublishedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Tags")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Thumbnail")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("TrendingRanks")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("UpdatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime2")
                    .HasDefaultValueSql("GETDATE()");

                b.Property<string>("Url")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Views")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("VideoId");

                b.ToTable("Videos");
            });
#pragma warning restore 612, 618
        }
    }
}
